plugins {
    //https://github.com/google/protobuf-gradle-plugin
    id "com.google.protobuf" version "0.8.18"
    id "java"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    implementation 'com.google.protobuf:protobuf-java:3.19.4'

    // https://mvnrepository.com/artifact/io.grpc/grpc-all
    implementation 'io.grpc:grpc-all:1.45.0'

    compileOnly group: "javax.annotation", name: "javax.annotation-api", version: "1.3.2"
    compileOnly group: "org.jetbrains", name: "annotations", version: "13.0"


}

sourceSets {
    src {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/java'
            }
        }
    }
}


protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.19.3'
    }

    // Locate the codegen plugins
    plugins {
        // Locate a plugin with name 'grpc'. This step is optional.
        // If you don't locate it, protoc will try to use "protoc-gen-grpc" from
        // system search path.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.45.0'
            // or
            // path = 'tools/protoc-gen-grpc-java'
        }
        // Any other plugins

    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }

}

test {
    useJUnitPlatform()
}